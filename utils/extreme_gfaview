#!/bin/bash
input=$1
it=$2
if [ ! -f "$input.gfa" ]; then
    echo "Input GFA file not found!"
    exit 1
fi

curgfa=$input.gfa
curseq=$input.sequences
curfa=$input.fa


DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"


echo "running $it rounds of gfaview simplifications"

for i in `seq 1 $it` 
do
 nextgfa=$input.$i.gfa
 nextseq=$input.$i.sequences
 nextfa=$input.$i.fasta
 #gfatools gfa -m -t -r -b -u $curgfa -v 3 > $nextgfa
 gfatools asm -r 1000 -t 200000 -b 200000 -u $curgfa > $nextgfa
 
 if [ -f "$curseq" ]
 then
     python $DIR/retrace_minimizers.py $curseq $nextgfa 5
     python $DIR/output_basic_sequences.py  $input.sequences $nextseq
     python $DIR/sequences_file_to_fasta.py  $nextseq $nextfa
 fi

#Â finishing up
#mv $base.notips.nobubbles.again.gfa $base.assembled.gfa # FIXME
#mv $base.notips.nobubbles.again.fasta $base.assembled.fasta # FIXME
 if [ "$curgfa" != "$input.gfa" ]
 then
     rm -f $curgfa $curseq $curfa
 fi
 curgfa=$nextgfa
 curseq=$nextseq
 curfa=$nextfa
 echo "iteration $i done"
done

echo "done, result in: $curgfa"
